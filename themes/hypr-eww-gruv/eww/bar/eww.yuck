(include "./variables.yuck")

(defwidget tray []
  (box
    :class "tray"
    :halign "end"
    :space-evenly false
    (eventbox
      :onhover "${eww} update wifi-rev=true"
      :onhoverlost "${eww} update wifi-rev=false"
      (box
        :spacing 0
        :space-evenly false
        (image :class "icon wifi-icon" :path wifi-icon :image-width "24" :image-height "24")
        (revealer
          :transition "slideleft"
          :reveal wifi-rev
          :duration "250ms"
          (label :class "slide-text" :text " ${wifi-essid} (${wifi-strength})"))))
    (eventbox
      :onhover "${eww} update vol-rev=true"
      :onhoverlost "${eww} update vol-rev=false"
      (box
        :spacing 0
        :space-evenly false
        (image :class "icon vol-icon" :path vol-icon :image-width "24" :image-height "24")
        (revealer
          :transition "slideleft"
          :reveal vol-rev
          :duration "250ms"
          (box
            :orientation "h"
            :hexpand false
            :space-evenly false
            (scale
              :flipped false
              :orientation "h"
              :value vol-num
              :draw-value false
              :min 0
              :max 101
              :onchange "pamixer --set-volume {}")
            (label :class "slider-text" :text "${vol-num}%")))))
    (eventbox
      :onhover "${eww} update bat-rev=true"
      :onhoverlost "${eww} update bat-rev=false"
      (box
        :spacing 0
        :space-evenly false
        (image :class "icon bat-icon" :path bat-icon :image-width "28" :image-height "28")
        (revealer
          :transition "slideleft"
          :reveal bat-rev
          :duration "250ms"
          (box
            :orientation "h"
            :hexpand false
            :space-evenly false
            (scale
              :flipped false
              :orientation "h"
              :value bat-num
              :draw-value false
              :min 0
              :max 101)
            (label :class "slide-text" :text bat-lvl)))))
    (eventbox
      :onhover "${eww} update br-rev=true"
      :onhoverlost "${eww} update br-rev=false"
      (box
        :spacing 0
        :space-evenly false
        (image :class "icon br-icon" :path "../images/brightness.svg" :image-width "24" :image-height "24")
        (revealer
          :transition "slideleft"
          :reveal br-rev
          :duration "250ms"
          (box
            :orientation "h"
            :hexpand false
            :space-evenly false
            (scale
              :flipped false
              :orientation "h"
              :value br-num
              :draw-value false
              :min 0
              :max 101
              :onchange "brillo -S {}")
            (label :class "slider-text" :text br-lvl)))))
    (eventbox
      :onclick "sh -c `../scripts/control-center`"
      :tooltip "open control center"
      (image :class "icon control-center-icon" :path "../images/control-center.svg" :image-width "26" :image-height "26"))))

(defwidget workspaces []
  (literal :content workspaces))

(defwidget time []
  (box
    :class "time"
    :halign "start"
    (eventbox
      :onclick "sh -c `../scripts/calendar`"
      :onhover "${eww} update date-rev=true"
      :onhoverlost "${eww} update date-rev=false"
      (box
        :spacing 0
        :space-evenly false
        (image :class "icon clock-icon" :path "../images/clock.svg" :image-width "24" :image-height "24")
        (label :class "text" :text "${hours}ó°‡™${mins}")
        (revealer
          :transition "slideright"
          :reveal date-rev
          :duration "250ms"
          (label :class "time-slide-text" :text "| ${date}"))))))

(defwidget nothing []
  (box
    :class "nothing"
    (label :class "text" :text "nothing")))

(defwidget bar []
  (centerbox
    :orientation "h"
    :class "bar"
    (time)
    (workspaces)
    (tray)))

(defwindow bar
  :stacking "fg"
  :monitor "0"
  :exclusive true
  :namespace "bar"
  :geometry (geometry
              :x "0px"
              :y "0px"
              :width "100%"
              :height "0%"
              :anchor "bottom center")
  (bar))
